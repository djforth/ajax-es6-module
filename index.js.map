{"version":3,"sources":["lib/ajaxApi.es6.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;IAEtB,YAAY;AAgCL,WAhCP,YAAY,CAgCJ,GAAG,EAAC;0BAhCZ,YAAY;;AAiCd,QAAI,CAAC,GAAG,GAAO,GAAG,IAAI,IAAI,CAAC;AAC3B,QAAI,CAAC,KAAK,GAAK,KAAK,CAAC;AACrB,QAAI,CAAC,IAAI,GAAM,EAAE,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;;;;GAKnB;;eAzCG,YAAY;;;;WAIN,oBAAC,KAAK,EAAC;AACf,UAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;AAClB,YAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;OAC7C,MAAM;AACL,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC1B;KAEF;;;WAEI,eAAC,EAAE,EAAC;AACP,UAAG,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,EAAC;AACnB,eAAO,IAAI,CAAC,GAAG,CAAC;OACjB;;AAED,UAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;AACzB,eAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,QAAM,EAAE,WAAQ,CAAC;OACjD;;AAED,aAAW,IAAI,CAAC,GAAG,SAAI,EAAE,CAAG;KAC7B;;;WAEK,gBAAC,GAAG,EAAC;AACT,UAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;AAClB,cAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;OACzC;AACD,UAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;WAaK,gBAAC,IAAI,EAAE,QAAQ,EAAC;AACpB,UAAI,CAAC,KAAK,GAAG,MAAM,CAAC;;AAEpB,aAAO,IAAI,OAAO,CAAC,CAAA,UAAS,OAAO,EAAE,MAAM,EAAE;AAC3C,YAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;OAClD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf;;;;;WAGM,iBAAC,EAAE,EAAE,QAAQ,EAAC;;AAEnB,UAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;AACtB,aAAO,IAAI,OAAO,CAAC,CAAA,UAAS,OAAO,EAAE,MAAM,EAAE;AAC3C,YAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;OAEtD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf;;;;;WAGI,eAAC,QAAQ,EAAC;AACb,UAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,aAAO,IAAI,OAAO,CAAC,CAAA,UAAS,OAAO,EAAE,MAAM,EAAE;AAC3C,YAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;OAE5C,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf;;;;;WAGM,mBAAE;AACP,UAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;AAC5D,UAAG,KAAK,EAAC;AACP,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,cAAc,EAAE,KAAK,EAAC,KAAK,CAAC,OAAO,EAAC,CAAC,CAAC;OACjE;KACF;;;;;WAGM,mBAAE;AACP,aAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;WAEI,eAAC,IAAI,EAAE,EAAE,EAAC;AACb,aAAO,AAAC,EAAE,GAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;KAC5B;;;;;WAGS,oBAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAC;AAC7C,UAAG,IAAI,CAAC,GAAG,EAAC;AACV,cAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;OAChC;AACD,UAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACvD,UAAI,IAAI,GAAG,AAAC,IAAI,GAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;;;AAGhD,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC3C,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChB;;;;;WAEQ,mBAAC,IAAI,EAAC;AACb,UAAG,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AACvB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OAC9B;;AAED,aAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;WAGK,gBAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAC;AACxB,UAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;AAEnB,aAAO,IAAI,OAAO,CAAC,CAAA,UAAS,OAAO,EAAE,MAAM,EAAE;AAC3C,YAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;OACxE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf;;;;;WAGS,oBAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAC;;;AAG9B,UAAG,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;;AAEzC,cAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;OACnC;;;AAGD,UAAG,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;AACvB,YAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACjC,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;OACzB;KACF;;;;;WAGS,oBAAC,GAAG,EAAE,OAAO,EAAC;AACtB,UAAI,OAAO,EAAE;AACX,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;OAC1B;;AAED,OAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,UAAS,CAAC,EAAC;AACjC,WAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;OACzC,CAAC,CAAC;KAEJ;;;;;WAGU,qBAAC,GAAG,EAAE,QAAQ,EAAC;AACxB,UAAG,GAAG,CAAC,gBAAgB,EAAC;AACtB,gBAAQ,CAAC;AACP,iBAAO,EAAG,AAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,GAAK,GAAG,AAAC;AAC3C,gBAAM,EAAE,GAAG,CAAC,MAAM;AAClB,eAAK,EAAE,GAAG,CAAC,KAAK;SACjB,CAAC,CAAC;OACJ,MAAM;AACL,gBAAQ,CAAC;AACP,iBAAO,EAAC,GAAG;AACX,gBAAM,EAAC,GAAG,CAAC,MAAM;AACjB,eAAK,EAAC,GAAG,CAAC,MAAM;SACjB,CAAC,CAAC;OACJ;KACF;;;;;WAGS,oBAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAC;AACnC,UAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;;AAEjC,UAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC;;AAExB,WAAG,CAAC,UAAU,GAAG,CAAA,YAAU;;AAE1B,cAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAChC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACd;;AAED,SAAG,CAAC,kBAAkB,GAAG,CAAA,YAAU;;AAEjC,YAAI,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;OACvC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEb,SAAG,CAAC,OAAO,GAAG,YAAW;;AAEvB,cAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;OAChC,CAAC;;AAEF,aAAO,GAAG,CAAC;KACZ;;;SAzLG,YAAY;;;AA4LlB,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"index.js","sourcesContent":["const _ = require(\"lodash\");\n\nclass AjaxPromises {\n\n\n  // Stores headers\n  addHeaders(token){\n    if(_.isArray(token)){\n      this.headers = _.union(token, this.headers);\n    } else {\n      this.headers.push(token);\n    }\n\n  }\n\n  addID(id){\n    if(_.isUndefined(id)){\n      return this.uri;\n    }\n\n    if(this.uri.match(/.json/)){\n      return this.uri.replace(\".json\", `/${id}.json`);\n    }\n\n    return  `${this.uri}/${id}`;\n  }\n\n  addUrl(url){\n    if(!_.isString(url)){\n      throw new Error(\"URL must be a string\");\n    }\n    this.uri = url;\n  }\n\n  constructor(url){\n    this.uri     = url || null;\n    this.state   = \"GET\";\n    this.data    = [];\n    this.headers = [];\n    // if(document){\n    //   this.getCSRF();\n    // }\n    // this.getCSRF();\n  }\n\n  create(data, progress){\n    this.state = \"POST\";\n    // let _that = this;\n    return new Promise(function(resolve, reject) {\n      this.getRequest(resolve, reject, progress, data);\n    }.bind(this));\n  }\n\n  // Rails Restful API - DESTROY\n  destroy(id, progress){\n    //Destroy Record\n    this.state = \"DELETE\";\n    return new Promise(function(resolve, reject) {\n      this.getRequest(resolve, reject, progress, null, id);\n\n    }.bind(this));\n  }\n\n  // GET Request\n  fetch(progress){\n    this.state = \"GET\";\n    return new Promise(function(resolve, reject) {\n      this.getRequest(resolve, reject, progress);\n\n    }.bind(this));\n  }\n\n  // For Rails Authentication\n  getCSRF(){\n    let token = document.querySelector(\"meta[name=csrf-token]\");\n    if(token){\n      this.headers.push({header:\"X-CSRF-Token\", value:token.content});\n    }\n  }\n\n  // Returns current data\n  getData(){\n    return this.data;\n  }\n\n  getID(data, id){\n    return (id) ? id : data.id;\n  }\n\n  // Get/Sends Request\n  getRequest(resolve, reject, progress, send, id){\n    if(this.url){\n      throw new Error(\"URL not set\");\n    }\n    const xhr = this.setRequest(resolve, reject, progress);\n    let data = (send) ? JSON.stringify(send) : null;\n    // let url  = (id) ? `${this.uri}/${id}` : this.uri\n    // console.log(\"url\", url);\n    xhr.open(this.state, this.addID(id), true);\n    xhr.send(data);\n  }\n  // Parses Data\n  parseData(data){\n    if(!_.isUndefined(data)) {\n      this.data = JSON.parse(data);\n    }\n\n    return this.data;\n  }\n\n  // Rails Restful PUT request\n  update(data, id, progress){\n    this.state = \"PUT\";\n    // let _that = this;\n    return new Promise(function(resolve, reject) {\n      this.getRequest(resolve, reject, progress, data, this.getID(data, id));\n    }.bind(this));\n  }\n\n  // Ready state for success or error\n  readyState(xhr, resolve, reject){\n    // console.log(xhr.responseText)\n    //Error\n    if(xhr.status !== 200 && xhr.status !== 0) {\n      // console.log(\"Error\", xhr.status);\n      reject(new Error(xhr.statusText));\n    }\n\n    // all is well\n    if(xhr.readyState === 4) {\n      this.parseData(xhr.responseText);\n      resolve(this.getData());\n    }\n  }\n\n  // Sets headers for request\n  setHeaders(xhr, headers){\n    if (headers) {\n      this.addHeaders(headers);\n    }\n\n    _.forEach(this.headers, function(h){\n      xhr.setRequestHeader(h.header, h.value);\n    });\n\n  }\n\n  // Progress check\n  setProgress(evt, progress){\n    if(evt.lengthComputable){\n      progress({\n        percent: (( evt.loaded / evt.total ) * 100),\n        loaded: evt.loaded,\n        total: evt.total\n      });\n    } else {\n      progress({\n        percent:100,\n        loaded:evt.loaded,\n        total:evt.loaded\n      });\n    }\n  }\n\n  // Creates XMLHttpRequest\n  setRequest(resolve, reject, progress){\n    const xhr = new XMLHttpRequest();\n\n    if(_.isFunction(progress)){\n      //Set progress\n      xhr.onprogress = function(){\n\n       this.setProgress(xhr, progress);\n      }.bind(this);\n    }\n\n    xhr.onreadystatechange = function(){\n\n      this.readyState(xhr, resolve, reject);\n    }.bind(this);\n\n    xhr.onerror = function() {\n      //Network error\n      reject(Error(\"Network Error\"));\n    };\n\n    return xhr;\n  }\n}\n\nmodule.exports = AjaxPromises;\n\n"]}